// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package mock

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Scripts() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>// PDF preview functionality\ndocument.addEventListener('DOMContentLoaded', function() {\n    const pdfModal = document.getElementById('pdfModal');\n    const pdfFrame = document.getElementById('pdfFrame');\n    const downloadLink = document.getElementById('downloadLink');\n    \n    if (pdfModal) {\n        pdfModal.addEventListener('show.bs.modal', function(event) {\n            const button = event.relatedTarget;\n            const pdfUrl = button.getAttribute('data-pdf');\n            \n            // Load PDF in iframe\n            if (pdfFrame && pdfUrl) {\n                pdfFrame.src = pdfUrl;\n            }\n            \n            // Set download link\n            if (downloadLink && pdfUrl) {\n                downloadLink.href = pdfUrl;\n                downloadLink.download = pdfUrl.split('/').pop();\n            }\n        });\n        \n        // Clean up when modal closes\n        pdfModal.addEventListener('hidden.bs.modal', function() {\n            if (pdfFrame) {\n                pdfFrame.src = '';\n            }\n        });\n    }\n    \n    // Smooth scrolling for anchor links\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n        anchor.addEventListener('click', function(e) {\n            e.preventDefault();\n            const target = document.querySelector(this.getAttribute('href'));\n            if (target) {\n                window.scrollTo({\n                    top: target.offsetTop - 100,\n                    behavior: 'smooth'\n                });\n            }\n        });\n    });\n\n    // Search functionality\n    const searchInput = document.querySelector('.document-filter input[type=\"text\"]');\n    const categorySelect = document.querySelector('.document-filter select:nth-of-type(1)');\n    const yearSelect = document.querySelector('.document-filter select:nth-of-type(2)');\n\n    function filterDocuments() {\n        const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';\n        const selectedCategory = categorySelect ? categorySelect.value : '';\n        const selectedYear = yearSelect ? yearSelect.value : '';\n\n        const documentCards = document.querySelectorAll('.document-card');\n        \n        documentCards.forEach(card => {\n            const title = card.querySelector('.document-title')?.textContent.toLowerCase() || '';\n            const description = card.querySelector('.document-description')?.textContent.toLowerCase() || '';\n            const category = card.closest('.document-category')?.querySelector('.category-title')?.textContent.toLowerCase() || '';\n            \n            const matchesSearch = !searchTerm || title.includes(searchTerm) || description.includes(searchTerm);\n            const matchesCategory = !selectedCategory || selectedCategory === 'Всички категории' || category.includes(selectedCategory.toLowerCase());\n            \n            if (matchesSearch && matchesCategory) {\n                card.style.display = 'block';\n                card.parentElement.style.display = 'block';\n            } else {\n                card.style.display = 'none';\n            }\n        });\n\n        // Hide empty categories\n        const categories = document.querySelectorAll('.document-category');\n        categories.forEach(category => {\n            const visibleCards = category.querySelectorAll('.document-card[style*=\"display: block\"], .document-card:not([style*=\"display: none\"])');\n            if (visibleCards.length === 0) {\n                category.style.display = 'none';\n            } else {\n                category.style.display = 'block';\n            }\n        });\n    }\n\n    if (searchInput) {\n        searchInput.addEventListener('input', filterDocuments);\n    }\n    \n    if (categorySelect) {\n        categorySelect.addEventListener('change', filterDocuments);\n    }\n    \n    if (yearSelect) {\n        yearSelect.addEventListener('change', filterDocuments);\n    }\n\n    // Search button functionality\n    const searchButton = document.querySelector('.document-filter .btn-outline-danger');\n    if (searchButton) {\n        searchButton.addEventListener('click', filterDocuments);\n    }\n\n    // Enhanced document card interactions\n    const documentCards = document.querySelectorAll('.document-card');\n    \n    documentCards.forEach(card => {\n        // Add loading state to preview buttons\n        const previewBtn = card.querySelector('.btn-preview');\n        if (previewBtn) {\n            previewBtn.addEventListener('click', function() {\n                const originalText = this.innerHTML;\n                this.innerHTML = '<i class=\"fas fa-spinner fa-spin me-1\"></i> Зареждане...';\n                this.disabled = true;\n                \n                // Reset button after modal is shown\n                setTimeout(() => {\n                    this.innerHTML = originalText;\n                    this.disabled = false;\n                }, 1000);\n            });\n        }\n\n        // Add download tracking\n        const downloadBtn = card.querySelector('.btn-download');\n        if (downloadBtn) {\n            downloadBtn.addEventListener('click', function() {\n                const documentTitle = card.querySelector('.document-title')?.textContent || 'Неизвестен документ';\n                console.log(`Изтегляне на документ: ${documentTitle}`);\n                \n                // Show temporary feedback\n                const originalText = this.innerHTML;\n                this.innerHTML = '<i class=\"fas fa-check me-1\"></i> Изтеглено';\n                this.style.backgroundColor = 'var(--primary-gold)';\n                \n                setTimeout(() => {\n                    this.innerHTML = originalText;\n                    this.style.backgroundColor = 'var(--primary-red)';\n                }, 2000);\n            });\n        }\n    });\n});</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
