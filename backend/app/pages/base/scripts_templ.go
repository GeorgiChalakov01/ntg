// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package base

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import ()

func Scripts() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n    // Scroll animation\n    document.addEventListener('DOMContentLoaded', function() {\n      const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('visible');\n          }\n        });\n      }, {\n        threshold: 0.1\n      });\n      document.querySelectorAll('.animate-on-scroll').forEach(element => {\n        observer.observe(element);\n      });\n      // Auto-rotate stats numbers\n      const statNumbers = document.querySelectorAll('.stat-number');\n      statNumbers.forEach(number => {\n        const target = parseInt(number.textContent);\n        let current = 0;\n        const increment = target / 50;\n        const timer = setInterval(() => {\n          current += increment;\n          if (current >= target) {\n            number.textContent = target;\n            clearInterval(timer);\n          } else {\n            number.textContent = Math.ceil(current);\n          }\n        }, 30);\n      });\n      // Add hover effect for dropdowns on desktop\n      if (window.innerWidth > 992) {\n        const dropdowns = document.querySelectorAll('.dropdown');\n        dropdowns.forEach(dropdown => {\n          dropdown.addEventListener('mouseenter', function() {\n            this.querySelector('.dropdown-menu').classList.add('show');\n          });\n          dropdown.addEventListener('mouseleave', function() {\n            this.querySelector('.dropdown-menu').classList.remove('show');\n          });\n        });\n      }\n      // Ensure quick links are fully visible\n      function adjustQuickLinks() {\n        const quickLinks = document.querySelector('.quick-links');\n        if (quickLinks) {\n          const viewportHeight = window.innerHeight;\n          const headerHeight = 70; // Fixed header height\n          const quickLinksHeight = viewportHeight * 0.2; // 20% of viewport\n          quickLinks.style.height = `${quickLinksHeight}px`;\n          // Adjust carousel height\n          const carousel = document.querySelector('.hero-carousel');\n          if (carousel) {\n            carousel.style.height = `${viewportHeight - headerHeight - quickLinksHeight}px`;\n          }\n        }\n      }\n      // Initial adjustment\n      adjustQuickLinks();\n      // Adjust on window resize\n      window.addEventListener('resize', adjustQuickLinks);\n    });\n  </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
